# Для заданного списка распечатать каждый элемент.
user_list = ['admin', 'guest', 'mike']
for i in user_list:
    print(i)

# Напиши программу, которая для списка чисел num_list и вычисляет их сумму.
# Подсказка: сначала нужно завести переменную sum_nums и запиши в нее 0, в которую будет добавляться число из списка.
# Распечатай результат sum_nums и убедись, что программа вывела 15.
num_list = [1, 2, 3, 4, 5]
sum_nums = 0
for i in num_list:
    sum_nums = sum_nums + i
print(sum_nums)

# Напиши программу, которая для списка чисел num_list_2 и вычисляет их произведение.
# Распечатай результат и убедись, что программа вывела 24.
num_list_2 = [1, 2, 3, 4]
total = 1
for i in num_list_2:
    total = total * i
print(total)

# Напиши программу, которая находит и выводит минимальный элемент в списке чисел.
# Подсказка: сначала нужно завести переменную min_value, в которой будешь хранить минимальное значение.
# Для начала запиши в нее первый элемент из num_list_3.
# Потом будешь идти по списку с помощью цикла и сравнивать min_value с текущим элементом.
# Если он больше, занесешь в переменную min_value. В итоге в конце списка в min_value будет минимальное значение.
# Распечатай результат и убедись, что программа вывела 5.
num_list_3 = [10, 21, 5, 40, 15]
min_value = num_list_3[0]
for i in num_list_3:
    if i < min_value:
        min_value = i
print(min_value)

# Напиши программу, которая находит и выводит максимальный элемент в списке чисел.
# Распечатай результат и убедись, что программа вывела 20.
num_list_4 = [11, 20, 5, 16]
max_value = num_list_4[0]
for i in num_list_4:
    if i > max_value:
        max_value = i
print(max_value)

# Напиши программу, которая находит и выводит максимальный и минимальный элементы в списке чисел.
# Распечатай результат и убедись, что программа должна вывести 40 и 5.
num_list_5 = [10, 20, 5, 40, 15]
min_value2 = max_value2 = num_list_5[0]
for i in num_list_5:
    if i > max_value2:
        max_value2 = i

    if i < min_value2:
        min_value2 = i
print(max_value2, min_value2)

# Напиши программу, которая вычисляет среднее значение элементов списка чисел.
# Нужно сложить все элементы списка, а потом поделить на кол-во элементов списка (len используй)
# Распечатай результат и убедись, программа должна вывести 3.
num_list_6 = [1, 2, 3, 4, 5]
total = 0
length = len(num_list_6)
for i in num_list_6:
    total = total + i
average_num = total // length
print(average_num)

# Для заданного списка распечатать каждый элемент используя range и доступ по индексу.
# Подсказка: Нужно сделать последовательность range для len(user_list_2), в ней будут
# числа: 0, 1, ..., len(user_list_2) -1. И тогда ты идешь по индексам и вытаскиваешь элементы из user_list_2
user_list_2 = ['john', 'andy', 'jane']
length = len(user_list_2)
for i in range(length):
    print(user_list_2[i])

# Для заданного списка price_list умножить каждый элемент на 2.
# Подсказка: нужно идти по индексам (range), обращаться к элементу по индексу и присваивать ему
# текущее значение умноженное на 2.
# Потом распечатать весь список price_list через print
# Потом распечатать в цикле каждый элемент списка price_list
price_list = [10, 20, 30]
length = len(price_list)
for i in range(length):
    price_list[i] = price_list[i] * 2
    print(price_list[i])
print(price_list)

# Для заданного списка age_list каждое число меньше 18 заменить на 0.
# Подсказка: нужно проверить текущее значение через if. Если условие выполняется, то элемент меняем на 0.
# Потом распечатать весь список age_list через print
age_list = [21, 10, 7, 30]
length = len(age_list)
for i in range(length):
    if age_list[i] < 18:
        age_list[i] = 0
print(age_list)

# Для заданного списка price_list_2 сложить только цены, которые идут под четными индексами, т.е. 0, 2, 4  и т.д.
# Результат вывести на экран. Должно быть 160.
# Есть несколько решений. Ниже постановка для каждого из них.

# Решение 1: Пройти по всем индексам списка и проверять, является ли индекс четным. И только тогда его в сумму добавить.
price_list_2 = [10, 20, 30, 40, 50, 50, 70, 80]
count = 0
length = len(price_list_2)
for i in range(length):
    if i % 2 == 0:
        count = count + price_list_2[i]
print(count)

# Решение 2: Сделать индекс с шагом 2 через range и значения по этим индексам добавлять в сумму. Это лучшее решение,
# так как цикл повторяется только 4 раза и нет проверок (if) - будет работать быстрее в 2 раза минимум.
price_list_2 = [10, 20, 30, 40, 50, 50, 70, 80]
count = 0
length = len(price_list_2)
for i in range(0, length, 2):
    count = count + price_list_2[i]
print(count)

# Для заданного списка price_list_3 сложить только цены, которые идут под нечетными индексами, т.е. 1, 3, и т.д.
# Результат вывести на экран. Должно быть 190.
# Подсказка: Сделать индекс через range с указанным начальным значением и шагом
price_list_3 = [10, 20, 30, 40, 50, 50, 70, 80]
length = len(price_list_2)
count = 0
for i in range(1, length, 2):
    count = count + price_list_2[i]
print(count)

# Для списка price_list_4 значения под четными индексами умножить на 10, а под нечетными на 100.
# Распечатать price_list_4 через принт. Результат должен быть [100, 100, 200, 200, 300, 300, 500, 500].
# Есть несколько решений. Ниже постановка для каждого из них.

price_list_4 = [10, 1, 20, 2, 30, 3, 50, 5]

# Решение 1: Пройти по всем индексам списка и проверять, является ли индекс четным. Если да, тогда взять элемент по
# индексу и умножить на 10 и сохранить в списке. Если нет, то умножить на 100 и сохранить в списке.
length = len(price_list_4)
for i in range(length):
    if i % 2 == 0:
        price_list_4[i] = price_list_4[i] * 10
    else:
        price_list_4[i] = price_list_4[i] * 100

print(price_list_4)

# Решение 2: Сделать индекс i от 0 с шагом 2 через range.
# Взять элемент по индексу i и умножить на 10.
# Взять элемент по индексу i + 1 и умножить на 100.
price_list_4 = [10, 1, 20, 2, 30, 3, 50, 5]
length = len(price_list_4)
for i in range(0, length, 2):
    price_list_4[i] = price_list_4[i] * 10
    price_list_4[i + 1] = price_list_4[i + 1] * 100
print(price_list_4)

# Для списка price_list_5 нужно поменять местами четные и нечетные элементы, т.е 0 с 1, 2 с 3-м, и т.д.
# Распечатать price_list_5 через принт. Результат должен быть [1, 10, 2, 20, 3, 30, 5, 50].
# Подсказка: Будем идти по четным индексам, т.е. сделать индекс i от 0 с шагом 2 через range.
# А потом элемент под индексом i поменять местами с элементом с индексом i+1.
price_list_5 = [10, 1, 20, 2, 30, 3, 50, 5]
length = len(price_list_5)
for i in range(0, length, 2):
    value = price_list_5[i]
    price_list_5[i] = price_list_5[i + 1]
    price_list_5[i + 1] = value
print(price_list_5)

# Дан список price_list_6
price_list_6 = [10, 1, 20, 2, 30, 3, 50, 5]

# Задача 1: Вывести на экран все элементы price_list_6, которые идут после 2-го.
# Результат должен содержать числа: 20, 2, 30, 3, 50, 5
price_list_6 = [10, 1, 20, 2, 30, 3, 50, 5]

length = len(price_list_6)
for i in range(2, length):
    print(price_list_6[i])

# Задача 2: Создать список price_list_6_res и в него сложить  все элементы, которые идут после 2-го в price_list_6.
# Распечатать price_list_6_res. Результат должен быть [20, 2, 30, 3, 50, 5]
price_list_6 = [10, 1, 20, 2, 30, 3, 50, 5]
price_list_6_res = []

length = len(price_list_6)
for i in range(2, length):
    price_list_6_res.append(price_list_6[i])

print(price_list_6_res)

# Задача 3: Сложить все price_list_6, которые идут после 2-го.
# Распечатать результат. Результат должен содержать числа: 110
price_list_6 = [10, 1, 20, 2, 30, 3, 50, 5]

result = 0
length = len(price_list_6)
for i in range(2, length):
    result = result + price_list_6[i]

print(result)

# Задача 4: Для списка price_list_6 найти минимальный и максимальный элемент среди тех , которые идут после 2-го.
# Распечатать результат. Результат должен содержать числа: 2 и 50
price_list_6 = [10, 1, 20, 2, 30, 3, 50, 5]
min_value_6 = max_value_6 = price_list_6[2]
length = len(price_list_6)
for i in range(2, length):
    if price_list_6[i] > max_value_6:
        max_value_6 = price_list_6[i]
    if price_list_6[i] < min_value_6:
        min_value_6 = price_list_6[i]

print(min_value_6, max_value_6)

#  Даны 2 списка, которые содержат все буквы, которы встречаются в некотором тексте и количество раз, сколько каждая
#  буква есть в это тексте.
# - letters - это список всех букв.
# - counts - это сколько каждая буква встречается в тексте.
letters = ['a', 'b', 'c', 'd', 'e']
counts = [10, 5, 5, 6, 11]
# Н-р, counts[0] (т.е. 10) - это сколько буква letters[0] (т.е. 'a') встречается в тексте.
# Н-р, counts[2] (т.е. 5) - это сколько буква letters[2] (т.е. 'b') встречается в тексте.
#
# Задача: для заданной буквы test_letter вывести, сколько раз она встречается в тексте.
#
# Подсказка: Чтобы найти информацию о букве двух массивах нужно знать индекс этой буквы в letters. А потом уже по этому
# индексу взять кол-во из counts. Поэтому алгоритм такой:
# - заводим переменную letter_ind и присваиваем ей начальное значение. Так как test_letter может и не быть в тексте и,
# соответственно в letters, так что нужно инициализировать любым значением меньше 0, скажем -1.
# - потом идем в цикле по letters. Если  буква равна test_letter, то сохраняем индекс в letter_ind.
# - после завершения цикла в letter_ind будет храниться индекс буквы test_letter или -1.
# - если letter_ind равно -1, тогда выводим на экран "Буква не найдена", иначе выводим количество раз этой буквы из
# counts по индексу letter_ind

test_letter = 'd'

letter_ind = -1

length = len(letters)
for i in range(0, length):
    if letters[i] == test_letter:
        letter_ind = i

print(letter_ind)

if letter_ind == -1:
    print("Буква не найдена")
else:
    print(counts[letter_ind])

# Написать функцию get_letter_count, которая возвращает, сколько раз буква встречаются в некотором тексте.
# Функция принимает 3 параметра: letter_lst, count_lst и test_letter и возвращает 0, если по букве нет информации
# в тексте или число, сколько раз она встречается в тексте.
print("START")


# Реализовать функцию get_letter_count

def get_letter_count(letter_lst, count_lst, letter):
    found_index = None

    for i in range(len(letter_lst)):
        if letter_lst[i] == letter:
            found_index = i

    if found_index is None:
        return 0
    else:
        num = count_lst[found_index]
        return num


# Вызвать функцию с параметрами ['a', 'b', 'c', 'd', 'e'], [10, 5, 5, 6, 11], 'd' и сохранить результат в переменной
# count_res. Вывести count_res на экран и убедиться, что там 6.
count_res = get_letter_count(['a', 'b', 'c', 'd', 'e'], [10, 5, 5, 6, 11], 'd')
print(count_res)

# Вызвать функцию с параметрами ['a', 'b', 'c', 'd', 'e'], [10, 5, 5, 6, 11], 'y' и сохранить результат в переменной
# count_res. Вывести count_res на экран и убедиться, что там 0.
count_res1 = get_letter_count(['a', 'b', 'c', 'd', 'e'], [10, 5, 5, 6, 11], 'y')
print(count_res1)
print("END")
