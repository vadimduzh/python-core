# Задача №108. Является ли слово палиндромом?
#
# По данной строке определите, является ли она палиндромом (то есть, можно ли прочесть ее наоборот, как, например,
# слово "топот"). Чтобы проверить, является ли слово палиндромом, нужно сравнить исходную строку с ее перевернутой
# версией. Если обе строки совпадают, то слово является палиндромом.
#
# Код должен содержать 2 решения:
# - используя срез (вы же смотрели видео о срезах - можно еще раз посмотреть и начти как перевернуть строку)
# - свое решение. Можно сделать так: пройти по списку символов в строке и сравнивать первый с последним, второй с
# предпоследним и т.д. Вот я предлагаю алгоритм, а вы попробуйте его реализовать (хотя можете и вой придумать):
# -- Будем идти по циклу и брать число первое с начала и с конца, потом второе сначала и с конца, и т.д.
# -- Нам нужно знать сколько будет таких пар. Если длина строки четная (abcba), то будет длина/2. А если нечетная
# (abcba), тогда длина//2, а средний элемент сам себе будет равен. Тогда получается что кол-во пар будет равно длина//2.
# -- Получается, что индекс будет меняться от 0 до длина//2
# -- В теле цикла проверяем совпадаете ли s[i] и s[len(s) - i - 1].
# -- Если хоть один не совпал (мы такое делали в str_compare.py), то ответ no, иначе yes
#
# Входные данные
# На вход подается 1 строка без пробелов.
#
# Выходные данные
# Необходимо вывести  yes, если строка является палиндромом, и no в противном случае.
#
# Примеры
# Входные данные
# abba
#
# Выходные данные
# yes



